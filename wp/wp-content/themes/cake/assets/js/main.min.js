"use strict";window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){t=t||window;for(var c=0;c<this.length;c++)e.call(t,this[c],c,this)});var items=document.querySelectorAll(".cake__item");[Element.prototype,Document.prototype,DocumentFragment.prototype].forEach(function(e){e.hasOwnProperty("append")||Object.defineProperty(e,"append",{configurable:!0,enumerable:!0,writable:!0,value:function(){var e=Array.prototype.slice.call(arguments),c=document.createDocumentFragment();e.forEach(function(e){var t=e instanceof Node;c.appendChild(t?e:document.createTextNode(String(e)))}),this.appendChild(c)}})}),function(){var e=[window.Element,window.CharacterData,window.DocumentType],t=[];e.forEach(function(e){e&&t.push(e.prototype)}),t.forEach(function(e){e.hasOwnProperty("remove")||Object.defineProperty(e,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}();try{var btn=document.querySelector(".menu__menu"),block=document.querySelector(".menu__list");btn.addEventListener("click",function(){btn.classList.toggle("menu__menu-active"),btn.classList.contains("menu__menu-active")?block.style.display="block":block.style.display="none"})}catch(e){}try{items.forEach(function(e){e.addEventListener("mouseover",function(e){var t,c=e.target.closest(".cake__item");if(c&&!c.querySelector(".cake__info")){switch(c.dataset.element){case"1":t="cake__goRight";break;case"2":t="cake__goCenter";break;case"3":t="cake__goLeft"}var a=document.createElement("div");a.classList.add("cake__info",t),console.log(a),a.innerHTML='\n                <h3 class="cake__title">'.concat(c.dataset.name,'</h3>\n                <p class="cake__description">').concat(c.dataset.info,'</p>\n                <div class="cake__footer">\n                <span class="cake__gram">').concat(c.dataset.gramm,'г.</span>\n                <span class="cake__price">').concat(c.dataset.price,"Р</span>\n                "),c.append(a)}})}),items.forEach(function(e){e.addEventListener("mouseleave",function(e){document.querySelector(".cake__info").remove()})})}catch(e){}try{var checbox=document.querySelector(".application__label-checkbox"),button=document.querySelector(".application__submit");checbox.addEventListener("click",function(e){var t=checbox.querySelector(".application__checkbox-bad"),c=checbox.querySelector(".application__checkbox-bad-block");t.checked?(t.checked=!1,c.classList.remove("application__checkbox-bad-block-active"),button.classList.add("modal__disabled"),button.classList.remove("modal__submit")):(t.checked=!0,c.classList.add("application__checkbox-bad-block-active"),button.classList.remove("modal__disabled"),button.classList.add("modal__submit"))})}catch(e){}try{var checkbox=document.querySelector(".modal__checkbox"),btnSubmit=document.querySelector(".modal__button"),applicationCheckBox=document.querySelector(".application__checkbox-bad"),applicationSubmit=document.querySelector(".application__submit");try{checkbox.addEventListener("change",function(){checkbox.checked?(btnSubmit.classList.remove("modal__disabled"),btnSubmit.classList.add("modal__submit")):(btnSubmit.classList.add("modal__disabled"),btnSubmit.classList.remove("modal__submit"))})}catch(e){}try{applicationCheckBox.addEventListener("change",function(e){applicationCheckBox.checked?(applicationSubmit.classList.remove("modal__disabled"),applicationSubmit.classList.add("modal__submit")):(applicationSubmit.classList.add("modal__disabled"),applicationSubmit.classList.remove("modal__submit"))})}catch(e){}}catch(e){}try{document.querySelector(".menu-icon").addEventListener("click",function(e){e.target.closest(".menu-icon").classList.toggle("clicked"),document.querySelector(".menu-icon").classList.contains("clicked")?document.querySelector(".header__list-hamburger").classList.add("active-list","header__list-hamburger-animate"):document.querySelector(".header__list-hamburger").classList.remove("active-list")})}catch(e){}try{var iframe=document.createElement("iframe")}catch(e){}try{var btns=document.querySelectorAll(".tort__click"),modal=document.querySelector(".modal"),dialog=document.querySelector(".modal__dialog"),_block=document.querySelector(".modal__block");btns.forEach(function(e){e.addEventListener("click",function(e){document.body.style.overflow="hidden",modal.style.transition="all 1s",modal.style.overflow="auto",modal.classList.add("modal-active");var t=e.target.closest(".tort__item"),c=document.createElement("div");c.classList.add("modal__infoTort"),c.innerHTML='\n                <h2 class="modal__title">Онлайн заказ торта</h2>\n                <div class="modal__info">\n                    <div class="modal__img-block">\n                        <img src="'.concat(t.dataset.img,'" alt="tort" class="modal__img">\n                    </div>\n                    <div class="modal__description">\n                        <h5 class="modal__name">').concat(t.dataset.nameTort,'</h5>\n                        <p class="modal__text">\n                            ').concat(t.dataset.description,'\n                        </p>\n                    </div>\n                </div>\n                <div class="modal__bottom">\n                    <div class="modal__line"></div>\n                    <div class="modal__opis">\n                        <div class="modal__gram">').concat(t.dataset.kg,' кг.</div>\n                        <div class="modal__price">').concat(t.dataset.rub," ₽</div>\n                    </div>\n                </div>\n            "),_block.append(c);var a=document.createElement("input");a.classList.add("input__hidden"),a.value=t.dataset.nameTort,document.querySelector(".hidden__label").append(a)})}),modal.addEventListener("click",function(e){e.target.classList.contains("modal")&&(document.body.style.overflow="",modal.style.transition="none",modal.classList.remove("modal-active"),modal.querySelector(".modal__infoTort").remove(),document.querySelector(".hidden__label").querySelector(".input__hidden").remove())})}catch(e){}try{var conts=document.querySelectorAll(".cont"),inputs=document.querySelector(".application").querySelectorAll(".application-input");conts.forEach(function(e){e.addEventListener("click",function(e){var t=e.target.closest(".cont");t.querySelector("input").focus(),t.querySelector(".placeholder").style.display="none"})}),inputs.forEach(function(e){e.addEventListener("blur",function(e){""==e.target.value.trim()&&(e.target.nextElementSibling.style.display="block")})})}catch(e){}try{var labels=document.querySelectorAll(".application__label");labels.forEach(function(e){e.addEventListener("click",function(e){var t=e.target.closest(".application__label").querySelector(".application__checkbox"),c=e.target.closest(".application__label").querySelector(".application__checkbox-block");t.checked||(document.querySelectorAll(".application__checkbox").forEach(function(e){e.previousElementSibling.classList.remove("application__checkbox-block-active")}),c.classList.add("application__checkbox-block-active"))})})}catch(e){}window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){t=t||window;for(var c=0;c<this.length;c++)e.call(t,this[c],c,this)});try{var addDots=function(){var a=document.createElement("div");a.classList.add("slider__dots"),elements.forEach(function(e,t){var c=document.createElement("div");c.classList.add("slider__dot"),c.setAttribute("data-count",t+1),0===t&&c.classList.add("slider__dot-active"),a.appendChild(c)}),document.querySelector(".slider").appendChild(a)},startInterval=function(){interval=setInterval(goNext,6e3)},changeDots=function(e,t){var c,a;e&&(slider.querySelectorAll(".slider__dot").forEach(function(e){e.classList.remove("slider__dot-active")}),e.target.classList.add("slider__dot-active"),c=e.target.getAttribute("data-count"),a=(count=c)*parseInt(width)-parseInt(width),content.style.transform="translateX(-".concat(a,"px)")),t&&slider.querySelectorAll(".slider__dot").forEach(function(e,t){e.classList.remove("slider__dot-active"),t+1===count&&e.classList.add("slider__dot-active")})},goNext=function(){var e;count===elements.length?(content.style.transform="translateX(0)",count=1):(e=(++count-1)*parseInt(width),content.style.transform="translateX(-".concat(e,"px)")),changeDots(null,"changeColor")},goPrev=function(){var e,t;1===count?(e=(elements.length-1)*parseInt(width)+"px",content.style.transform="translateX(-".concat(e,")"),count=elements.length):(t=--count*parseInt(width)-parseInt(width),content.style.transform="translateX(-".concat(t,"px)")),changeDots(null,"changeColor")};!function(e){e.matches=e.matches||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector,e.closest=e.closest||function(e){return this?this.matches(e)?this:this.parentElement?this.parentElement.closest(e):null:null}}(Element.prototype);var interval,width=window.getComputedStyle(document.querySelector(".slider__wrapper")).width,wrapper=document.querySelector(".slider__wrapper"),elements=document.querySelectorAll(".slider__item"),content=document.querySelector(".slider__content"),prev=document.querySelector(".slider__left"),next=document.querySelector(".slider__right"),slider=document.querySelector(".slider"),count=1;addDots(),content.style.width=elements.length*parseInt(width)+"px",next.addEventListener("click",goNext),prev.addEventListener("click",goPrev),startInterval(),wrapper.addEventListener("mouseenter",function(){clearInterval(interval)}),wrapper.addEventListener("mouseleave",function(){startInterval()}),slider.querySelectorAll(".slider__dot").forEach(function(e){e.addEventListener("click",function(e){return changeDots(e,null)})})}catch(e){}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
